digraph aeron_media_driver {

    ranksep=2.0;
    rankdir=LR;
    compound=true;

    subgraph cluster_command {
        style = filled;
        fillcolor = "#cccccc";

        command [ label="command" shape="none" fontsize=24 ];

        correlated_command [ label="correlated_command" shape="record" ];
        counter_command [ label="counter_command" shape="record" ];
        destination_command [ label="destination_command" shape="record" ];
        image_buffers_ready [ label="image_buffers_ready" shape="record" ];
        operation_succeeded [ label="operation_succeeded" shape="record" ];
        publication_buffers_ready [ label="publication_buffers_ready" shape="record" ];
        publication_command [ label="publication_command" shape="record" ];
        remove_command [ label="remove_command" shape="record" ];
        subscription_command [ label="subscription_command" shape="record" ];
    }

    subgraph cluster_context {
        style = filled;
        fillcolor = "#ffcccc";

        context [ label="context" shape="none" fontsize=24 ];

        cnc_file [ label="cnc_file" shape="doubleoctagon" ];
        conductor_command_queue [ label="conductor_command_queue" shape="cds" ];
        conductor_idle_strategy [ label="conductor_idle_strategy" shape="diamond" ];
        congestion_control [ label="congestion_control" shape="record" ];
        counters_metadata_buffer [ label="counters_metadata_buffer" shape="cds" ];
        counters_values_buffer [ label="counters_values_buffer" shape="cds" ];
        error_buffer [ label="error_buffer" shape="cds" ];
        loss_report_file [ label="loss_report_file" shape="doubleoctagon" ];
        multicast_flow_control [ label="multicast_flow_control" shape="record" ];
        receiver_command_queue [ label="receiver_command_queue" shape="cds" ];
        receiver_id [ label="receiver_id" shape="record" ];
        receiver_idle_strategy [ label="receiver_idle_strategy" shape="diamond" ];
        sender_command_queue [ label="sender_command_queue" shape="cds" ];
        sender_idle_strategy [ label="sender_idle_strategy" shape="diamond" ];
        to_client_interceptor [ label="to_client_interceptor" shape="diamond" ];
        to_clients_buffer [ label="to_clients_buffer" shape="cds" ];
        to_driver_buffer [ label="to_driver_buffer" shape="cds" ];
        to_driver_interceptor [ label="to_driver_interceptor" shape="diamond" ];
        unicast_flow_control [ label="unicast_flow_control" shape="record" ];

        counters_metadata_buffer -> cnc_file;
        counters_values_buffer -> cnc_file;
        error_buffer -> cnc_file;
        to_clients_buffer -> cnc_file;
        to_driver_buffer -> cnc_file;
    }

    subgraph cluster_driver {
        style = filled;
        fillcolor = "#ccccff";

        driver [ label="driver" shape="none" fontsize=24 ];

        subgraph cluster_agent_runners {
            style = filled;
            fillcolor = "#ffcc99";

            agent_runners [ label="agent_runners" shape="none" fontsize=24 ];

            pthread_t [ label="pthread_t" shape="larrow" ];
        }

        subgraph cluster_conductor {
            style = filled;
            fillcolor = "#ffffcc";

            conductor [ label="conductor" shape="none" fontsize=24 ];

            conductor_proxy [ label="conductor_proxy" shape="record" ];
            counters_manager [ label="counters_manager" shape="record" ];
            error_log [ label="error_log" shape="record" ];
            loss_reporter [ label="loss_reporter" shape="record" ];
            system_counters [ label="system_counters " shape="box3d" ];
            to_clients_broadcast_transmitter [ label="to_clients_broadcast_transmitter" shape="record" ];
            to_driver_commands [ label="to_driver_commands" shape="doublecircle" ];

            subgraph cluster_media {
                style = filled;
                fillcolor = "#99ccff";

                media [ label="media" shape="none" fontsize=24 ];

                subgraph cluster_receive_channel_endpoints {
                    style = filled;
                    fillcolor = "#99ccff";

                    receive_channel_endpoints [ label="receive_channel_endpoints" shape="none" fontsize=20 ];

                    data_packet_dispatcher [ label="data_packet_dispatcher" shape="record" ];

                    subgraph cluster_receive_udp_channel_transport {
                        style = filled;
                        fillcolor = "#99ccff";

                        receive_udp_channel_transport [ label="udp_channel_transport" shape="none" fontsize=16 ];

                        receive_udp_fd [ label="udp_fd" shape="larrow" ];
                    }
                }

                subgraph cluster_send_channel_endpoints {
                    style = filled;
                    fillcolor = "#99ccff";

                    send_channel_endpoints [ label="send_channel_endpoints" shape="none" fontsize=20 ];

                    subgraph cluster_send_udp_channel_transport {
                        style = filled;
                        fillcolor = "#99ccff";

                        send_udp_channel_transport [ label="udp_channel_transport" shape="none" fontsize=16 ];

                        send_udp_fd [ label="udp_fd" shape="larrow" ];
                    }

                    subgraph cluster_udp_destination_tracker {
                        style = filled;
                        fillcolor = "#99ccff";

                        udp_destination_tracker [ label="udp_destination_tracker" shape="none" fontsize=16 ];

                        udp_destinations [ label="udp_destinations" shape="box3d" ];
                    }
                }
            }

            subgraph cluster_pubsub {
                style = filled;
                fillcolor = "#99ffcc";

                pubsub [ label="publications and subscriptions" shape="none" fontsize=24 ];

                ipc_subscriptions [ label="ipc_subscriptions " shape="box3d" ];
                network_subscriptions [ label="network_subscriptions " shape="box3d" ];
                spy_subscriptions [ label="spy_subscriptions " shape="box3d" ];

                subgraph cluster_ipc_publications {
                    style = filled;
                    fillcolor = "#99ffcc";

                    ipc_publications [ label="ipc_publications" shape="none" fontsize=20 ];

                    ip_mapped_log_file [ label="mapped_log_file" shape="doubleoctagon" ];
                }

                subgraph cluster_network_publications {
                    style = filled;
                    fillcolor = "#99ffcc";

                    network_publications [ label="network_publications" shape="none" fontsize=20 ];

                    np_mapped_log_file [ label="mapped_log_file" shape="doubleoctagon" ];
                    retransmit_handler [ label="retransmit_handler" shape="record" ];
                }

                subgraph cluster_publication_images {
                    style = filled;
                    fillcolor = "#99ffcc";

                    publication_images [ label="publication_images" shape="none" fontsize=20 ];

                    loss_detector [ label="loss_detector" shape="record" ];
                    pi_mapped_log_file [ label="mapped_log_file" shape="doubleoctagon" ];

                    loss_detector -> pi_mapped_log_file;
                }
            }

            publication_images -> receive_channel_endpoints;
            network_publications -> send_channel_endpoints;
        }

        subgraph cluster_receiver {
            style = filled;
            fillcolor = "#d2b48c";

            receiver [ label="receiver" shape="none" fontsize=24 ];

            receiver_recv_buffers [ label="recv_buffers" shape="record" ];
            receiver_proxy [ label="receiver_proxy" shape="record" ];

            subgraph cluster_receiver_udp_transport_poller {
                style = filled;
                fillcolor = "#d2b48c";

                receiver_udp_transport_poller [ label="udp_transport_poller" shape="none" fontsize=20 ];

                receiver_epoll_fd [ label="epoll_fd" shape="larrow" ];
            }
        }

        subgraph cluster_sender {
            style = filled;
            fillcolor = "#d2b48c";

            sender [ label="sender" shape="none" fontsize=24 ];

            sender_recv_buffers [ label="recv_buffers" shape="record" ];
            sender_proxy [ label="sender_proxy" shape="record" ];

            subgraph cluster_sender_udp_transport_poller {
                style = filled;
                fillcolor = "#d2b48c";

                sender_udp_transport_poller [ label="udp_transport_poller" shape="none" fontsize=20 ];

                sender_epoll_fd [ label="epoll_fd" shape="larrow" ];
            }
        }

        agent_runners -> conductor [ ltail=cluster_agent_runners, lhead=cluster_conductor ];
        agent_runners -> conductor_idle_strategy [ ltail=cluster_agent_runners ];
        agent_runners -> receiver [ ltail=cluster_agent_runners, lhead=cluster_receiver ];
        agent_runners -> receiver_idle_strategy [ ltail=cluster_agent_runners ];
        agent_runners -> sender [ ltail=cluster_agent_runners, lhead=cluster_sender ];
        agent_runners -> sender_idle_strategy [ ltail=cluster_agent_runners ];
        receiver_udp_transport_poller -> receive_udp_channel_transport;
        sender_udp_transport_poller -> send_udp_channel_transport;
    }

    subgraph cluster_protocol {
        style = filled;
        fillcolor = "#cccccc";

        protocol [ label="protocol" shape="none" fontsize=24 ];

        data_header [ label="data_header" shape="record" ];
        nak_header [ label="nak_header" shape="record" ];
        rttm_header [ label="rttm_header" shape="record" ];
        setup_header [ label="setup_header" shape="record" ];
        status_message_header [ label="status_message_header" shape="record" ];
    }

    conductor -> context [ ltail=cluster_conductor, lhead=cluster_context ];
    conductor -> to_client_interceptor [ ltail=cluster_conductor ];
    conductor -> to_driver_interceptor [ ltail=cluster_conductor ];
    conductor_proxy -> conductor_command_queue;
    conductor_proxy -> counters_manager;
    counters_manager -> counters_metadata_buffer;
    counters_manager -> counters_values_buffer;
    driver -> context [ ltail=cluster_driver, lhead=cluster_context ]
    error_log -> error_buffer;
    loss_reporter -> loss_report_file;
    network_publications -> multicast_flow_control;
    network_publications -> unicast_flow_control;
    publication_images -> congestion_control;
    receiver -> context [ ltail=cluster_receiver, lhead=cluster_context ];
    receiver -> error_log [ ltail=cluster_receiver ];
    receiver -> publication_images [ ltail=cluster_receiver];
    receiver -> receive_channel_endpoints [ ltail=cluster_receiver];
    receiver_proxy -> receiver_command_queue;
    send_channel_endpoints -> sender_proxy;
    sender -> context [ ltail=cluster_sender, lhead=cluster_context ];
    sender -> error_log [ ltail=cluster_sender ];
    sender -> network_publications [ ltail=cluster_sender ];
    sender_proxy -> sender_command_queue; 
    system_counters -> counters_manager;
    to_clients_broadcast_transmitter -> to_clients_buffer;
    to_driver_commands -> to_driver_buffer;
    udp_destinations -> receiver_id;
}
